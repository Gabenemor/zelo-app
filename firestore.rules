rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Authenticated users can create their own user document.
    // - Authenticated users can read their own user document.
    // - Authenticated users can update their own user document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId; // Allow creation during registration
      allow delete: if false; // Generally, don't allow client-side deletes of user docs
    }

    // Artisan Profiles collection:
    // - Authenticated artisans can create their own profile.
    // - Authenticated artisans can update their own profile.
    // - Profiles are publicly readable (adjust if you need them private).
    match /artisanProfiles/{artisanId} {
      allow read: if true; // Or `if request.auth != null;` for logged-in users only
      allow create: if request.auth != null && request.auth.uid == artisanId;
      allow update: if request.auth != null && request.auth.uid == artisanId;
      allow delete: if false;
    }

    // Client Profiles collection:
    // - Authenticated clients can create their own profile.
    // - Authenticated clients can update their own profile.
    // - Profiles are publicly readable (adjust if you need them private).
    match /clientProfiles/{clientId} {
      allow read: if true; // Or `if request.auth != null;` for logged-in users only
      allow create: if request.auth != null && request.auth.uid == clientId;
      allow update: if request.auth != null && request.auth.uid == clientId;
      allow delete: if false;
    }

    // Add specific rules for other collections as your app develops.
    // For example:
    // match /serviceRequests/{requestId} {
    //   allow read: if true;
    //   allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
    //   allow update: if request.auth != null && request.auth.uid == resource.data.clientId;
    //                 // Or if request.auth.uid == resource.data.assignedArtisanId for certain fields
    //   allow delete: if request.auth != null && request.auth.uid == resource.data.clientId;
    // }

    // Default deny for any path not explicitly matched above.
    // This is important for security.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
